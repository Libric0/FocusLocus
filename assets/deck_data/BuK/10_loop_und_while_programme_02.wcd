<?xml version="1.0" encoding="UTF-8"?>
<knowledge>
    <knowledgeItem type="knowledgeStatement" id="ackermann funktion turing berechenbar">
        <topicSingular>Ackermann Funktion</topicSingular>
        <topicPlural>Funktionen</topicPlural>
        <contentItems>
            <contentItem>Die Ackermann Funktion ist</contentItem>
            <contentItemCompletable/>
            <contentItem>berechenbar</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>Turing</fillIn>
            <fillIn>WHILE</fillIn>
            <fillIn>RAM</fillIn>
            <fillIn>TM</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>LOOP</fillIn>
            <fillIn>nicht</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
    <knowledgeItem type="knowledgeMultipleChoiceTexText" id="ackermannfunktion monotonie">
        <questions>
           <question>Welche Sätze gelten für die Ackermannfunktion</question>
        </questions>
        <correctChoices>
            <choice>$$\forall m,n \in \N:$$$$A(m,n+1)&gt;A(m,n)$$</choice>
            <choice>$$\forall m,n \in \N:$$$$A(m+1,n)&gt;A(m,n)$$</choice>
            <choice>$$\forall m,n \in \N:$$$$A(m+1,n-1)\geq A(m,n)$$</choice>
            <choice>$$\forall m\geq m', n\geq n':$$$$A(m,n)\geq A(m',n')$$</choice>
            <choice>$$\forall m\geq m', n\geq n':$$$$(m,n) \neq (m',n') \Rightarrow $$$$A(m,n)&gt; A(m',n')$$</choice>
        </correctChoices>
        <incorrectChoices>
            <choice>$$\forall m,n \in \N:$$$$A(m,n+1)&lt;A(m,n)$$</choice>
            <choice>$$\forall m,n \in \N:$$$$A(m,n)&gt;A(m+1,n)$$</choice>
            <choice>$$\forall m,n \in \N:$$$$A(m+1,n-1)&lt; A(m,n)$$</choice>
            <choice>$$\forall m,n \in \N:$$$$A(m+1,n-1)= A(m,n)$$</choice>
            <choice>$$\forall m\leq m', n\geq n':$$$$A(m,n)\geq A(m',n')$$</choice>
            <choice>$$\forall m\geq m', n\geq n':$$$$(m,n) \neq (m',n') \Rightarrow $$$$A(m,n)&lt; A(m',n')$$</choice>
        </incorrectChoices>
    </knowledgeItem>
    <knowledgeItem type="knowledgeMultipleChoiceTexText" id="wachstumsfunktionen">
        <questions>
            <question>Wie wurden die Funktionen $$[P]$$, $$f_P$$ und $$F_P$$ definiert?</question>
        </questions>
        <correctChoices>
            <choice>$$[P]: \N^k \rightarrow \N^k$$</choice>
            <choice>$$\overset{\rightarrow}{a} = (a_1,...,a_k)$$ ist der Eingabevektor für $$P$$</choice>
            <choice>$$\overset{\rightarrow}{b} = (b_1,...,b_k)$$ ist der Ausgabevektor für $$P$$ auf $$\overset{\rightarrow}{a}$$</choice>
            <choice>$$[P](\overset{\rightarrow}{a}) = \overset{\rightarrow}{b}$$</choice>
            <choice>$$f_P: \N^k \rightarrow \N$$</choice>
            <choice>$$f_P(\overset{\rightarrow}{a}) = b_1+...+b_k$$</choice>
            <choice>$$F_P(n) =$$$$\max \left\{f_p(\overset{\rightarrow}{a})|\overset{\rightarrow}{a} \in \N^k \land \sum\limits_{i=0}^k a_i\leq n\right\}$$</choice>
            <choice>$$F_P$$ ist der maximale Wert, auf den eine Variablensumme durch $$P$$ anwachsen kann</choice>
        </correctChoices>
        <incorrectChoices>
            <choice>$$[P]: \N^k \rightarrow \N$$</choice>
            <choice>$$\overset{\rightarrow}{a} = (a_1,...,a_k)$$ ist der Ausgabevektor für $$P$$</choice>
            <choice>$$\overset{\rightarrow}{b} = (b_1,...,b_k)$$ ist der Eingabevektor für $$P$$</choice>
            <choice>$$[P](\overset{\rightarrow}{b}) = \overset{\rightarrow}{a}$$</choice>
            <choice>$$f_P: \N^k \rightarrow \N^k$$</choice>
            <choice>$$f_P(\overset{\rightarrow}{a}) = (b_1,...,b_k)$$</choice>
            <choice>$$f_P(n) =$$$$\max \left\{f_p(\overset{\rightarrow}{a})|\overset{\rightarrow}{a} \in \N^k \land \sum\limits_{i=0}^k a_i\leq n\right\}$$</choice>
            <choice>$$F_P$$ ist der maximale Wert, auf den eine Variable durch $$P$$ anwachsen kann</choice>
        </incorrectChoices>
    </knowledgeItem>
    <knowledgeItem type="knowledgeStatement" id="wachstumslemma">
        <topicSingular>LOOP</topicSingular>
        <topicPlural>LOOP-Programme</topicPlural>
        <contentItems>
            <contentItem>Das Wachstumslemma besagt, dass für jedes LOOP-Programm $$P$$ ein $$m_p$$ existiert, mit $$\forall n \in \N: F_P($$</contentItem>
            <contentItemCompletable/>
            <contentItem>$$) &lt; A(m_P,n)$$</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>$$n$$</fillIn>
            <fillIn>n</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>$$a$$</fillIn>
            <fillIn>a</fillIn>
            <fillIn>$$b$$</fillIn>
            <fillIn>b</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
    <knowledgeItem type="knowledgeMultipleChoiceTexText" id="beweis wachstumslemma zuweisungen">
        <questions>
            <question>Was kommt im Beweis des Wachstumslemmas vor?</question>
        </questions>
        <correctChoices>
            <choice>Beweis per Induktion über den Programmaufbau</choice>
            <choice>Den Induktionsanfang bilden die Zuweisungen $$x_i := x_j+c$$</choice>
            <choice>Für Zuweisungen gilt $$F_P&lt;A(2,n)$$</choice>
            <choice>Es gibt 2 Induktionsschritte</choice>
            <choice>Einen Induktionsschritt bildet die Hintereinanderausführung $$P_1;P_2$$</choice>
            <choice>Für $$P_1;P_2$$ wird angenommen $$\exists q\in \N: F_{P_1}(\mathcal l) &lt; A(q,\mathcal l)$$$$\land F_{P_2}(\mathcal l)&lt;A(q,\mathcal l)$$</choice>
            <choice>Für $$P_1;P_2$$ mit entsprechendem $$q$$ gilt $$F_{P_1;P_2}(l) &lt; A(q+1,l)$$</choice>
            <choice>Einen Induktionsschritt bildet das LOOP-Konstrukt LOOP $$x_i$$ DO $$Q$$ ENDLOOP</choice>
            <choice>Für LOOP $$x_i$$ DO $$Q$$ ENDLOOP wird angenommen $$\exists q\in \N: F_{Q}(\mathcal l) &lt; A(q,\mathcal l)$$</choice>
            <choice>Für $$P=$$ LOOP $$x_i$$ DO $$Q$$ ENDLOOP gilt $$F_{P}(l) &lt; A(q+1,l)$$</choice>
        </correctChoices>
        <incorrectChoices>
            <choice>Beweis per Induktion über $$n\in \N$$</choice>
            <choice>Den Induktionsanfang bildet die Hintereinanderausführung</choice>
            <choice>Es gibt einen Induktionsschritt</choice>
            <choice>Einen Induktionsschritt bildet die Zuweisung $$x_i := x_j+c$$</choice>
            <choice>Für $$P_1;P_2$$ wird angenommen $$\forall q\in \N: F_{P_1}(\mathcal l) &lt; A(q,\mathcal l)$$$$\land F_{P_2}(\mathcal l)&lt;A(q,\mathcal l)$$</choice>
            <choice>Für $$P_1;P_2$$ mit entsprechendem $$q$$ gilt $$F_{P_1;P_2}(l) &lt; A(q,l)$$</choice>
            <choice>Den Induktionsanfang bildet das LOOP-Konstrukt LOOP $$x_i$$ DO $$Q$$ ENDLOOP</choice>
            <choice>Für LOOP $$x_i$$ DO $$Q$$ ENDLOOP wird angenommen $$\exists q\in \N: F_{Q}(\mathcal l) &gt; A(q,\mathcal l)$$</choice>
            <choice>Für $$P=$$ LOOP $$x_i$$ DO $$Q$$ ENDLOOP gilt $$ A(q+1,l)&lt; F_{P}(l)$$</choice>
        </incorrectChoices>
    </knowledgeItem>
    <knowledgeItem type="knowledgeStatement" id="ackermann fkt nicht loop berechenbar">
        <topicSingular>Ackermann Funktion</topicSingular>
        <topicPlural>Funktionen</topicPlural>
        <contentItems>
            <contentItem>Die Ackermann Funktion ist nicht</contentItem>
            <contentItemCompletable/>
            <contentItem>berechenbar</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>LOOP</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>Turing</fillIn>
            <fillIn>WHILE</fillIn>
            <fillIn>RAM</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
    <knowledgeItem type="knowledgeStatement" id="ackermann funktion nicht loop berechenbar 2">
        <topicSingular>LOOP</topicSingular>
        <topicPlural>LOOP-Programme</topicPlural>
        <contentItems>
            <contentItem>Die</contentItem>
            <contentItemCompletable/>
            <contentItem>Funktion ist nicht LOOP berechenbar</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>Ackermann</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>Hilbert</fillIn>
            <fillIn>Turing</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
    <knowledgeItem type="knowledgeStatement" id="beweis ackermannfunktion nicht loop berechenbar">
        <topicSingular>Ackermann Funktion</topicSingular>
        <topicPlural>Funktionen</topicPlural>
        <contentItems>
            <contentItem>Würde die Ackermannfunktion von dem LOOP-Programm $$P$$ berechnet werden, lieferte das</contentItem>
            <contentItemCompletable/>
            <contentItem>eine Fixe Zahl $$m_p$$ mit $$F_P(n) &lt; A(m_P,n)$$</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>Wachstumslemma</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>Lemma von Zorn</fillIn>
            <fillIn>Schrumpflemma</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
    <knowledgeItem type="knowledgeStatement" id="loop teilmenge turing berechenbar">
        <topicSingular>LOOP</topicSingular>
        <topicPlural>LOOP-Programme</topicPlural>
        <contentItems>
            <contentItem>Die Menge der LOOP-berechenbaren Funktionen bildet eine echte</contentItem>
            <contentItemCompletable/>
            <contentItem>der berechenbaren Funktionen</contentItem>
        </contentItems>
        <correctFillIns>
            <fillIn>Teilmenge</fillIn>
        </correctFillIns>
        <incorrectFillIns>
            <fillIn>Obermenge</fillIn>
        </incorrectFillIns>
    </knowledgeItem>
</knowledge>